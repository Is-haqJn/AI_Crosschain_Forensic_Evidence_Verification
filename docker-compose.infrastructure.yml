version: '3.8'

# Infrastructure-only Docker Compose
# Just databases and services - no custom builds
# For fast startup during development

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: forensic-postgres
    environment:
      - POSTGRES_DB=forensic_db
      - POSTGRES_USER=forensic_user
      - POSTGRES_PASSWORD=forensic_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forensic_user -d forensic_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: forensic-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo_user
      - MONGO_INITDB_ROOT_PASSWORD=mongo_pass
      - MONGO_INITDB_DATABASE=evidence_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: forensic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: forensic-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq_user
      - RABBITMQ_DEFAULT_PASS=rabbitmq_pass
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  # IPFS
  ipfs:
    image: ipfs/kubo:latest
    container_name: forensic-ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs-data:/data/ipfs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5001/api/v0/version"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    name: forensic-postgres-data
  mongodb-data:
    name: forensic-mongodb-data
  redis-data:
    name: forensic-redis-data
  rabbitmq-data:
    name: forensic-rabbitmq-data
  ipfs-data:
    name: forensic-ipfs-data